# indent w/ 2 spaces
source: |
  if (x in a) {
    for i in [0:2:4] x[i]++;
  }
  else CX x[0], x[1];
reference: |
  program
    header
    statement
      branchingStatement
        if
        (
        booleanExpression
          membershipTest
            x
            in
            setDeclaration
              a
        )
        programBlock
          {
          statement
            loopStatement
              loopSignature
                for
                membershipTest
                  i
                  in
                  setDeclaration
                    rangeDefinition
                      [
                      expression
                        expressionTerminator
                          0
                      :
                      expression
                        expressionTerminator
                          2
                      :
                      expression
                        expressionTerminator
                          4
                      ]
              programBlock
                statement
                  expressionStatement
                    expression
                      expressionTerminator
                        expressionTerminator
                          expressionTerminator
                            x
                          [
                          expression
                            expressionTerminator
                              i
                          ]
                        incrementor
                          ++
                    ;
          }
        else
        programBlock
          statement
            quantumStatement
              quantumInstruction
                quantumGateCall
                  quantumGateName
                    CX
                  indexIdentifierList
                    indexIdentifier
                      x
                      [
                      expressionList
                        expression
                          expressionTerminator
                            0
                      ]
                    ,
                    indexIdentifier
                      x
                      [
                      expressionList
                        expression
                          expressionTerminator
                            1
                      ]
              ;
