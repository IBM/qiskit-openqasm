# indent w/ 2 spaces
source: |
  complex[int[32]] a;
  complex[float[40]] b = 4-5.5im;
  complex[fixed[5,7]] c = b+7.5*1e9im;
  complex[angle[20]] d = a + b;
reference: |
  program
    header
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              singleDesignatorType
                int
              designator
                [
                expression
                  expressionTerminator
                    32
                ]
            ]
            a
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              singleDesignatorType
                float
              designator
                [
                expression
                  expressionTerminator
                    40
                ]
            ]
            b
            equalsExpression
              =
              expression
                logicalAndExpression
                  bitOrExpression
                    xOrExpression
                      bitAndExpression
                        equalityExpression
                          comparisonExpression
                            bitShiftExpression
                              additiveExpression
                                additiveExpression
                                  multiplicativeExpression
                                    expressionTerminator
                                      4
                                -
                                multiplicativeExpression
                                  expressionTerminator
                                    5.5im
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              doubleDesignatorType
                fixed
              doubleDesignator
                [
                expression
                  expressionTerminator
                    5
                ,
                expression
                  expressionTerminator
                    7
                ]
            ]
            c
            equalsExpression
              =
              expression
                logicalAndExpression
                  bitOrExpression
                    xOrExpression
                      bitAndExpression
                        equalityExpression
                          comparisonExpression
                            bitShiftExpression
                              additiveExpression
                                additiveExpression
                                  multiplicativeExpression
                                    expressionTerminator
                                      b
                                +
                                multiplicativeExpression
                                  multiplicativeExpression
                                    expressionTerminator
                                      7.5
                                  *
                                  expressionTerminator
                                    1e9im
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              singleDesignatorType
                angle
              designator
                [
                expression
                  expressionTerminator
                    20
                ]
            ]
            d
            equalsExpression
              =
              expression
                logicalAndExpression
                  bitOrExpression
                    xOrExpression
                      bitAndExpression
                        equalityExpression
                          comparisonExpression
                            bitShiftExpression
                              additiveExpression
                                additiveExpression
                                  multiplicativeExpression
                                    expressionTerminator
                                      a
                                +
                                multiplicativeExpression
                                  expressionTerminator
                                    b
        ;
